
==================== FINAL INTERFACE ====================
2016-09-05 20:34:35.47865 UTC

interface crypt_9HSOuTb2mfa3j5HpkxhfyV:Serialize 7103
  interface hash: 5411927e2d6abbaafc8d128a1e24a5dd
  ABI hash: e386917bef75846ce61a848455a42ba9
  export-list hash: dc3853e313e0ec25fa52bfb8b0d206b6
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 962af636f8e927040c7daa9c21457292
  sig of: Nothing
  used TH splices: False
  where
exports:
  Serialize.getFromFile
  Serialize.putToFile
module dependencies:
package dependencies: array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      base-4.8.2.0 bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      cereal-0.5.2.0@cerea_GKnWyxn5hRWK9xfCMeMEL8
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59
                      fail-4.9.0.0@fail_2xB1AvdW34sDm9N3JOe33G ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
import  -/  base-4.8.2.0:Data.Either e8724afd65fd432cfe9a54014f5f762d
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString a7dd1816d7b9a73f13bb7af0c321dca4
import  -/  cereal-0.5.2.0@cerea_GKnWyxn5hRWK9xfCMeMEL8:Data.Serialize 9bf3a8072a0f07bd2924ddbfc9d00617
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
da951419665889346370cfa8b08dadd1
  getFromFile ::
    Data.Serialize.Serialize a => GHC.Base.String -> GHC.Types.IO a
  {- Arity: 3,
     Strictness: <L,1*U(A,1*C1(C1(C1(C1(C1(U))))))><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Serialize.getFromFile1
                  `cast`
                (forall a.
                 <Data.Serialize.Serialize a>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <a>_R)) -}
b3ef956902d15fccc88f0b673531edcd
  getFromFile1 ::
    Data.Serialize.Serialize a =>
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
  {- Arity: 3,
     Strictness: <L,1*U(A,1*C1(C1(C1(C1(C1(U))))))><L,U><L,U>,
     Unfolding: (\ @ a
                   $dSerialize :: Data.Serialize.Serialize a
                   filePath :: GHC.Base.String
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Control.Exception.Base.bracket1
                        @ GHC.IO.Handle.Types.Handle
                        @ ()
                        @ Data.ByteString.Internal.ByteString
                        (GHC.IO.Handle.FD.openBinaryFile1 filePath GHC.IO.IOMode.ReadMode)
                          `cast`
                        (Sym (GHC.Types.NTCo:IO[0] <GHC.IO.Handle.Types.Handle>_R))
                        GHC.IO.Handle.hClose1
                          `cast`
                        (<GHC.IO.Handle.Types.Handle>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                        Data.ByteString.readFile2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       <Data.ByteString.Internal.ByteString>_R))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    case Data.Either.rights1
                           @ GHC.Base.String
                           @ a
                           (GHC.Types.:
                              @ (Data.Either.Either GHC.Base.String a)
                              (Data.Serialize.decode @ a $dSerialize ipv1)
                              (GHC.Types.[] @ (Data.Either.Either GHC.Base.String a))) of wild {
                      [] -> GHC.List.badHead @ a : x ds2 -> x } #) }) -}
1447dca1d5c82d40ba7faded9b2b578c
  putToFile ::
    Data.Serialize.Serialize a =>
    GHC.Base.String -> a -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <L,1*U(1*C1(U(A,U)),A)><L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Serialize.putToFile1
                  `cast`
                (forall a.
                 <Data.Serialize.Serialize a>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <a>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
27d9fdbc63a98f55d51e55746cdfc59b
  putToFile1 ::
    Data.Serialize.Serialize a =>
    GHC.Base.String
    -> a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*U(1*C1(U(A,U)),A)><L,U><L,U><L,U>,
     Unfolding: (\ @ a
                   $dSerialize :: Data.Serialize.Serialize a
                   fileName :: GHC.Base.String
                   d :: a
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Control.Exception.Base.bracket1
                   @ GHC.IO.Handle.Types.Handle
                   @ ()
                   @ ()
                   (GHC.IO.Handle.FD.openBinaryFile1 fileName GHC.IO.IOMode.WriteMode)
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0] <GHC.IO.Handle.Types.Handle>_R))
                   GHC.IO.Handle.hClose1
                     `cast`
                   (<GHC.IO.Handle.Types.Handle>_R
                    ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                   (\ h :: GHC.IO.Handle.Types.Handle[OneShot]
                      eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                    case Data.ByteString.Lazy.toStrict
                           (Data.ByteString.Builder.toLazyByteString
                              (case (Data.Serialize.put @ a $dSerialize d)
                                      `cast`
                                    (Data.Serialize.Put.NTCo:PutM[0] <()>_N) of wild { Data.Serialize.Put.PairS ds1 b ->
                               b })) of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                    Data.ByteString.$wa h ww1 ww2 ww3 ww4 eta1 })
                     `cast`
                   (<GHC.IO.Handle.Types.Handle>_R
                    ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                   eta) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

